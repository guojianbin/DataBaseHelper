
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `PetaPcoConfig`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=(local);Initial Catalog=iSoftStoneFramework;Integrated Security=True;Connect Timeout=15;Encrypt=False;TrustServerCertificate=True;ApplicationIntent=ReadWrite;MultiSubnetFailover=False`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace PetaPcoConfig
{
	public partial class PetaPcoConfigDB : Database
	{
		public PetaPcoConfigDB() 
			: base("PetaPcoConfig")
		{
			CommonConstruct();
		}

		public PetaPcoConfigDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			PetaPcoConfigDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static PetaPcoConfigDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new PetaPcoConfigDB();
        }

		[ThreadStatic] static PetaPcoConfigDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static PetaPcoConfigDB repo { get { return PetaPcoConfigDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
		}
	}
	

    
	[TableName("Org_Company")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Org_Company : PetaPcoConfigDB.Record<Org_Company>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public Guid? OrganizationId { get; set; }
		[Column] public string Code { get; set; }
		[Column] public string ShortName { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Location { get; set; }
		[Column] public Guid? ManageId { get; set; }
		[Column] public string Phone { get; set; }
		[Column] public string Fax { get; set; }
		[Column] public string Email { get; set; }
		[Column] public string Url { get; set; }
		[Column] public string Desc { get; set; }
		[Column] public bool? Enable { get; set; }
		[Column] public DateTime? CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime? UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Org_Department")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Org_Department : PetaPcoConfigDB.Record<Org_Department>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public Guid? OrganizationId { get; set; }
		[Column] public string Code { get; set; }
		[Column] public string ShortName { get; set; }
		[Column] public string Name { get; set; }
		[Column] public int? DepType { get; set; }
		[Column] public Guid? ManageId { get; set; }
		[Column] public string Location { get; set; }
		[Column] public string Desc { get; set; }
		[Column] public bool? Enable { get; set; }
		[Column] public DateTime? CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime? UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Org_Employee")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Org_Employee : PetaPcoConfigDB.Record<Org_Employee>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public string EmpCode { get; set; }
		[Column] public string ChineseName { get; set; }
		[Column] public string EnglishName { get; set; }
		[Column] public string Phone { get; set; }
		[Column] public DateTime? HiredDate { get; set; }
		[Column] public DateTime? TerminatedDate { get; set; }
		[Column] public int? Gender { get; set; }
		[Column] public DateTime? BirthdayDate { get; set; }
		[Column] public string Residence { get; set; }
		[Column] public string NativePlace { get; set; }
		[Column] public string WorkProvinceName { get; set; }
		[Column] public string WorkCityName { get; set; }
		[Column] public string WorkLocation { get; set; }
		[Column] public string GradeCode { get; set; }
		[Column] public string ChinesePosition { get; set; }
		[Column] public string EnglishPosition { get; set; }
		[Column] public string Email { get; set; }
		[Column] public string SuperiorCode { get; set; }
		[Column] public bool? Enable { get; set; }
		[Column] public DateTime? CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime? UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Org_EmployeeOrganize")]
	[PrimaryKey("EmployeeId", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Org_EmployeeOrganize : PetaPcoConfigDB.Record<Org_EmployeeOrganize>  
    {
		[Column] public Guid EmployeeId { get; set; }
		[Column] public Guid OrgId { get; set; }
	}
    
	[TableName("Org_Organization")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Org_Organization : PetaPcoConfigDB.Record<Org_Organization>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public Guid? ParentId { get; set; }
		[Column] public string Code { get; set; }
		[Column] public string ShortName { get; set; }
		[Column] public string Name { get; set; }
		[Column] public int? Type { get; set; }
		[Column] public string Desc { get; set; }
		[Column] public int? ListOrder { get; set; }
		[Column] public bool? Enable { get; set; }
		[Column] public DateTime? CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime? UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Org_ProvinceCity")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Org_ProvinceCity : PetaPcoConfigDB.Record<Org_ProvinceCity>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public Guid? ParentId { get; set; }
		[Column] public int? Level { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Code { get; set; }
		[Column] public bool? Enable { get; set; }
		[Column] public DateTime? CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime? UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Org_WorkTeam")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Org_WorkTeam : PetaPcoConfigDB.Record<Org_WorkTeam>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public Guid? OrganizationId { get; set; }
		[Column] public string Code { get; set; }
		[Column] public string ShortName { get; set; }
		[Column] public string Name { get; set; }
		[Column] public Guid? ManageId { get; set; }
		[Column] public string Phone { get; set; }
		[Column] public string Desc { get; set; }
		[Column] public bool? Enable { get; set; }
		[Column] public DateTime? CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime? UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Sys_Application")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Sys_Application : PetaPcoConfigDB.Record<Sys_Application>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public string ApplicationName { get; set; }
		[Column] public string ApplicationCode { get; set; }
		[Column] public string ApplicationType { get; set; }
		[Column] public string Desc { get; set; }
		[Column] public string ConfigXml { get; set; }
		[Column] public bool Enabled { get; set; }
		[Column] public DateTime CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Sys_Navigation")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Sys_Navigation : PetaPcoConfigDB.Record<Sys_Navigation>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public Guid ApplicationId { get; set; }
		[Column] public string ApplicationCode { get; set; }
		[Column] public Guid? ParentId { get; set; }
		[Column] public string Code { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string ResourceKey { get; set; }
		[Column] public string FullPath { get; set; }
		[Column] public string FullName { get; set; }
		[Column] public string ParentFullPath { get; set; }
		[Column] public string ParentFullName { get; set; }
		[Column] public string Type { get; set; }
		[Column] public string Content { get; set; }
		[Column] public int? ListOrder { get; set; }
		[Column] public string Desc { get; set; }
		[Column] public bool Visible { get; set; }
		[Column] public bool Enable { get; set; }
		[Column] public DateTime CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Sys_Role")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Sys_Role : PetaPcoConfigDB.Record<Sys_Role>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public Guid? ApplicationId { get; set; }
		[Column] public string ApplicationCode { get; set; }
		[Column] public string RoleCode { get; set; }
		[Column] public string RoleName { get; set; }
		[Column] public string Desc { get; set; }
		[Column] public bool? Enable { get; set; }
		[Column] public DateTime? CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime? UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Sys_User")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Sys_User : PetaPcoConfigDB.Record<Sys_User>  
    {
		[Column] public Guid Id { get; set; }
		[Column] public string LoginName { get; set; }
		[Column] public string Password { get; set; }
		[Column] public string NickName { get; set; }
		[Column] public string Email { get; set; }
		[Column] public string UserType { get; set; }
		[Column] public bool IsInitializedPassword { get; set; }
		[Column] public DateTime? LastChangePasswordTime { get; set; }
		[Column] public DateTime? LastLoginTime { get; set; }
		[Column] public string LastLoginIP { get; set; }
		[Column] public int LoginTimes { get; set; }
		[Column] public string Desc { get; set; }
		[Column] public bool Enable { get; set; }
		[Column] public DateTime? CreateTime { get; set; }
		[Column] public string Creator { get; set; }
		[Column] public DateTime? UpdateTime { get; set; }
		[Column] public string Updator { get; set; }
	}
    
	[TableName("Sys_UserRole")]
	[PrimaryKey("RoleId", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Sys_UserRole : PetaPcoConfigDB.Record<Sys_UserRole>  
    {
		[Column] public Guid RoleId { get; set; }
		[Column] public Guid UserId { get; set; }
	}
}


